# üìÖ Semana 3 ‚Äì Dominio del Flujo + Nuevas T√©cnicas
# -------------------------------------------------
# Objetivo: Reforzar Python + SQL + Power BI + Excel con m√°s pr√°ctica, nuevos enfoques y visualizaci√≥n avanzada

# ‚úÖ D√≠a 1 ‚Äì Proyecto nuevo desde cero
# - Crear una nueva base de datos (ej. log√≠stica, finanzas, pedidos)
# - Dise√±ar nuevas tablas (ej. entregas, bodegas, facturas)
# - Insertar m√≠nimo 20 registros por tabla
# - Documentar el proceso en el recetario (paso a paso)

# ‚úÖ D√≠a 2 ‚Äì Consultas SQL avanzadas
# - Usar CASE, IF, LIMIT, DISTINCT, HAVING, FORMAT(), ROUND()
# - Calcular KPIs: total pedidos, promedio entregas, entregas a tiempo
# - Aplicar filtros por fecha o estado

# ‚úÖ D√≠a 3 ‚Äì Exportaci√≥n automatizada con Python
# - Crear script Python que:
#     - Conecte a MySQL
#     - Ejecute una consulta con JOIN
#     - Exporte a Excel como tabla estructurada
#     - Nombre del archivo con fecha autom√°tica (ej. entregas_2025_06_18.xlsx)

# ‚úÖ D√≠a 4 ‚Äì Power BI con enfoque profesional
# - Cargar Excel generado
# - Modelo estrella con relaciones
# - Crear tabla calendario
# - Formatear y categorizar columnas
# - Crear medidas nuevas: entregas por ciudad, retrasos promedio, top zonas

# ‚úÖ D√≠a 5 ‚Äì Dashboard pro: an√°lisis + visual
# - Gr√°ficos avanzados: barras apiladas, l√≠neas con etiquetas, mapas, KPIs
# - Filtros din√°micos: estado, regi√≥n, cliente
# - P√°gina resumen tipo "Informe Ejecutivo"
# - Exportar como .pbix y PDF

# ‚úÖ D√≠a 6 ‚Äì Automatizaci√≥n y actualizaci√≥n
# - Actualizar datos desde MySQL
# - Ejecutar el script Python
# - Validar actualizaci√≥n autom√°tica en Power BI
# - Publicar el proyecto en GitHub

# ‚úÖ D√≠a 7 ‚Äì Documentaci√≥n final
# - Escribir README.md con explicaci√≥n del proyecto
# - .gitignore limpio
# - Organizaci√≥n de carpetas: /scripts, /sql, /excel, /dashboards
# - Subir todo a GitHub (proyecto completo)
